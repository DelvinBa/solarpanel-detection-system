version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: airflow_postgres
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: airflow_redis
    restart: always
    ports:
      - "6379:6379"

  airflow-webserver:
    image: apache/airflow:2.7.2
    container_name: airflow_webserver
    restart: always
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    ports:
      - "8080:8080"
    volumes:
      - airflow_data:/opt/airflow/dags
    command: webserver

  airflow-scheduler:
    image: apache/airflow:2.7.2
    container_name: airflow_scheduler
    restart: always
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    volumes:
      - airflow_data:/opt/airflow/dags
    command: scheduler

  airflow-init:
    image: apache/airflow:2.7.2
    container_name: airflow_init
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    volumes:
      - airflow_data:/opt/airflow
    entrypoint: >
      /bin/sh -c "
      airflow db init;
      airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin;
      "

  minio:
    image: minio/minio
    container_name: minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server --console-address ":9001" /data

  minio-client:
    image: minio/mc
    container_name: minio-client
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set local http://minio:9000 minioadmin minioadmin;
      mc mb local/mybucket;
      mc policy set public local/mybucket;
      exit 0;
      "

  python-app:
    build: .
    container_name: python-app
    depends_on:
      - minio
      - airflow-webserver
    environment:
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      AIRFLOW_URL: http://airflow-webserver:8080
    volumes:
      - .:/app
    command: ["python", "app.py"]

volumes:
  postgres_data:
  airflow_data:
