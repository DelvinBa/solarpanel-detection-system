# docker/Dockerfile.airflow

ARG BASE_IMAGE=python:3.10-slim
FROM ${BASE_IMAGE}

LABEL component="airflow"

# Environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies and pip tooling
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    git \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    && rm -rf /var/lib/apt/lists/* \
    && pip install --no-cache-dir pip==23.1.2 setuptools==68.0.0 wheel==0.40.0

# Install Airflow and providers
RUN pip install --no-cache-dir \
    apache-airflow==2.10.5 \
    apache-airflow-providers-amazon==8.8.0 \
    apache-airflow-providers-postgres==5.10.0 \
    apache-airflow-providers-celery==3.5.0 \
    redis>=4.5.0 \
    kombu>=5.3.0

# Install PyTorch and YOLOv8
RUN pip install --no-cache-dir torch torchvision --index-url https://download.pytorch.org/whl/cpu \
    && pip install --no-cache-dir ultralytics

# Copy and install remaining Python dependencies
COPY requirements.txt /tmp/
RUN grep -vE '^(#|$)' /tmp/requirements.txt \
    | grep -vE 'torch|ultralytics|apache-airflow' \
    > /tmp/reqs-clean.txt \
    && pip install --no-cache-dir -r /tmp/reqs-clean.txt

# Create airflow user and directories
RUN groupadd -r airflow --gid=50000 && \
    useradd -r -g airflow --uid=50000 -d /opt/airflow airflow && \
    mkdir -p /opt/airflow/{dags,logs,config,plugins} /app && \
    chown -R 50000:0 /opt/airflow /app && \
    chmod -R 775 /opt/airflow /app

# Copy init script and ensure it's executable
COPY --chown=50000:0 ./init-scripts/init-airflow-user.sh /app/
RUN sed -i 's/\r$//' /app/init-airflow-user.sh && chmod 775 /app/init-airflow-user.sh

# Create entrypoint to copy DAGs at runtime
RUN echo '#!/bin/bash\nif [ -d "/sources/airflow/dags" ]; then\n  echo "Copying DAGs from /sources/airflow/dags"\n  cp -rf /sources/airflow/dags/* /opt/airflow/dags/\n  chown -R airflow:root /opt/airflow/dags\nfi\n\nexec "$@"' > /entrypoint.sh && \
    chmod +x /entrypoint.sh

RUN mkdir -p /opt/airflow/dags && \
    chown -R 50000:0 /opt/airflow && \
    chmod -R 775 /opt/airflow

COPY --chown=airflow:root ./airflow/dags/ /opt/airflow/dags/


# Expose UI port
EXPOSE 8080

# Health check for webserver
HEALTHCHECK --interval=30s --timeout=30s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Switch to airflow user
USER 50000

# Set working directory and entrypoint
WORKDIR /opt/airflow
ENTRYPOINT ["/entrypoint.sh"]
CMD ["airflow", "webserver"]
